{"name":"Kilombo","tagline":"Kilobot simulator in C","body":"# kilombo - C kilobot simulator\r\n\r\nAuthors: Fredrik Jansson, Matthew Hartley, Martin Hinsch, \r\n         Tjelvar Olsson, Ivica Slavkov, Noem√≠ Carranza\r\n\r\nContact: \r\nFredrik Jansson: fjansson@abo.fi\r\nMatthew Hartley: Matthew.Hartley@jic.ac.uk\r\n\r\n![Simulator](/images/gradient2-sim.png)\r\n\r\nKilombo is a C based kilobot simulator. The simulator was developed in the [Swarm Organ project](www.swarm-organ.eu), and is distributed under the MIT license (see the file LICENSE for details). Installation instructions follow below. For detailed usage instruction and programming documentation, see `docs/manual.md` and the example bots in `examples/`.\r\n\r\n\r\n\r\n## Prerequisites\r\nYou'll need to have:\r\n- git\r\n- cmake\r\n- SDL 1.X (including headers for building, i.e. devel packages under linux)\r\n- the [Jansson library](http://www.digip.org/jansson/) (though it's in many package managers. Again, get the development package)\r\n- the [Check unit testing library](http://check.sourceforge.net/)\r\n\r\nAdditionally, to compile the code for real kilobots as well, the following are needed:\r\n- avr-gcc (c compiler for the AVR microcontroller, to compile for the kilobot)\r\n- [Kilolib](https://github.com/acornejo/kilolib) (the official Kilobot library)\r\n\r\n\r\n### Debian-based Linux systems\r\n`sudo apt-get install build-essential git gcc-avr gdb-avr binutils-avr avr-libc avrdude libsdl1.2-dev libjansson-dev cmake check`\r\n\r\n### OSX systems\r\n\r\nStandard development tools, includeing git and a c compiler, can be obtained by installing xcode.\r\nIn addition, several libraries are needed, which can be obtained using the package manager brew.\r\nA tutorial: http://hackercodex.com/guide/mac-osx-mavericks-10.9-configuration/\r\n\r\nWith brew installed, install the libraries.\r\n\r\ncmake:\r\n`brew install cmake`\r\n\r\ncheck library:\r\n`brew install check`\r\n\r\nSDL library:\r\n`brew install sdl`\r\n\r\nAVR toolchain, (Optional, needed for real kilobots):\r\n`brew tap osx-cross/avr`\r\n`brew install avr-libc`\r\n\r\nFor the brew-installed libraries to be found, the following lines can be\r\nadded to `.bash_profile`:\r\n`export C_INCLUDE_PATH=/usr/local/include/:$C_INCLUDE_PATH`\r\n`export LIBRARY_PATH=/usr/local/lib:$LIBRARY_PATH`\r\n\r\n\r\n## Build instructions\r\n\r\nMake a build directory:\r\n\r\n\tmkdir build\r\n\tcd build\r\n\r\nRun cmake:\r\n\r\n\tcmake ..\r\n\r\nInstall:\r\n\r\n\tsudo make install\r\n\r\nThis installs the kilobot simulator in a system-wide location, by default\r\nunder `/usr/local/lib` and `/usr/local/include`.\r\n\r\n\r\n## Compile and run examples\r\ncd examples\r\ncd orbit\r\nmake     # or make -f Makefile.osx on OSX\r\n./orbit -b start_positions.json\r\n\r\nThe example makefiles are set up to build the code for the simulator by default. By running\r\n    make hex\r\nthe same source code is compiled for the real Kilobot. This requires the avr-gcc toolchain\r\nand the official Kilolib to be installed (see prerequisites above). \r\n\r\n## Setup for compiling programs for the real Kilobots\r\n\r\n### Kilolib\r\n\r\n    git clone https://github.com/acornejo/kilolib\r\n    cd kilolib\r\n    make\r\n\r\nadd `export KILOHEADERS=/path/to/kilolib/` to `.bash_profile` or another suitable\r\nconfigureation file, or provide the path in the Makefile for the bot program.\r\nFor the setting to take effect, open a new terminal or `source .bash_profile`. \r\n\r\nTo compile the example programs for real robots:\r\n`cd examples/orbit`  # or another example \r\n`make hex`\r\n\r\n\r\n## Third-party code\r\nThe simulator uses the [SDL_GFX library](http://cms.ferzkopp.net/index.php/software/13-sdl-gfx)\r\nby Andreas Schiffler (distributed under the zlib license). The source\r\ncode for the sdl_gfx library is bundled with the simulator due to its\r\nunreliable availability in various Linux distributions. It is located in the\r\ndirectory src/gfx, and is automatically compiled with the rest of the\r\nsource code.\r\n\r\nThe simulator also includes the API definitions of kilolib, the C\r\nlibrary for the physical kilobot robot. These are located in the file\r\nsrc/kilolib.h, with minor, simulator-specific changes.\r\nThe full kilolib source code is here: https://github.com/acornejo/kilolib .\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}